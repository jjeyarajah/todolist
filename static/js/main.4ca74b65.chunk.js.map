{"version":3,"sources":["components/Navigation.js","components/Page.js","App.js","reportWebVitals.js","index.js"],"names":["Navigation","style","display","justifyContent","paddingLeft","className","Page","updateInput","e","setState","textInput","target","value","addTask","state","tasksAdded","tasks","concat","id","text","console","log","enterPressed","keyCode","deleteTask","filter","task","clearTasks","type","placeholder","this","onKeyDown","onChange","onClick","map","React","Component","App","route","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"0PAUeA,G,YARI,WACjB,OACE,qBAAKC,MAAO,CAACC,QAAS,OAAQC,eAAgB,SAAUC,YAAa,QAArE,SACE,mBAAGC,UAAU,uBAAb,4BC0DSC,G,wDA3Db,aAAe,IAAD,8BACZ,gBAQFC,YAAc,SAACC,GACb,EAAKC,SAAS,CAACC,UAAWF,EAAEG,OAAOC,SAVvB,EAadC,QAAU,WACqB,KAAzB,EAAKC,MAAMJ,YACb,EAAKD,SAAS,CAACM,WAAY,EAAKD,MAAMC,WAAa,IACnD,EAAKN,SAAS,CAACO,MAAO,EAAKF,MAAME,MAAMC,OAAO,CAAC,CAACC,GAAI,EAAKJ,MAAMC,WAAYI,KAAM,EAAKL,MAAMJ,eAC5F,EAAKD,SAAS,CAACC,UAAW,KAC1BU,QAAQC,IAAI,EAAKP,MAAME,SAlBb,EAsBdM,aAAe,SAACd,GACI,KAAdA,EAAEe,SAA2C,KAAzB,EAAKT,MAAMJ,YACjC,EAAKD,SAAS,CAACM,WAAY,EAAKD,MAAMC,WAAa,IACnD,EAAKN,SAAS,CAACO,MAAO,EAAKF,MAAME,MAAMC,OAAO,CAAC,CAACC,GAAI,EAAKJ,MAAMC,WAAYI,KAAM,EAAKL,MAAMJ,eAC5F,EAAKD,SAAS,CAACC,UAAW,KAC1BU,QAAQC,IAAI,EAAKP,MAAME,SA3Bb,EA+BdQ,WAAa,SAACN,GACZ,EAAKT,SAAS,CAACO,MAAO,EAAKF,MAAME,MAAMS,QAAO,SAAAC,GAAI,OAAIA,EAAKR,KAAOA,QAhCtD,EAmCdS,WAAa,WACX,EAAKlB,SAAS,CAACO,MAAO,MAlCtB,EAAKF,MAAQ,CACXE,MAAO,GACPN,UAAW,GACXK,WAAY,GALF,E,qDAuCJ,IAAD,OACP,OACE,gCACE,gCACE,uBAAOV,UAAU,MAAMuB,KAAK,OAAOC,YAAY,oBAAoBjB,MAAOkB,KAAKhB,MAAMJ,UAAWqB,UAAWD,KAAKR,aAAcU,SAAUF,KAAKvB,cAC7I,wBAAQF,UAAU,2DAA2D4B,QAASH,KAAKjB,QAA3F,mBACA,wBAAQR,UAAU,qDAAqD4B,QAASH,KAAKH,WAArF,4BAEF,qBAAKtB,UAAU,wBAAf,SACE,oBAAIA,UAAU,MAAd,SAEIyB,KAAKhB,MAAME,MAAMkB,KAAI,SAAAR,GAAI,OAAI,sBAAKrB,UAAU,yBAAf,UAAsD,wBAAQ4B,QAAS,kBAAM,EAAKT,WAAWE,EAAKR,KAAKb,UAAU,kBAA3D,oBAAuF,oBAAIA,UAAU,WAAd,SAA0BqB,EAAKP,SAA/HO,EAAKR,kB,GAnD1EiB,IAAMC,YCqBVC,E,kDAjBb,aAAgB,IAAD,8BACb,gBACKvB,MAAQ,CACXwB,MAAO,UAHI,E,qDAQb,OACE,sBAAKjC,UAAU,MAAf,UACE,cAAC,EAAD,IACA,cAAC,EAAD,W,GAZU+B,aCMHG,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.4ca74b65.chunk.js","sourcesContent":["import React from 'react';\n\nconst Navigation = () => {\n  return (\n    <nav style={{display: 'flex', justifyContent: 'center', paddingLeft: '30px'}}>\n      <p className='f2 black georgia pa1'>To Do List</p>\n    </nav>\n  );\n}\n\nexport default Navigation;","import React from 'react';\nimport './Page.css';\n\nclass Page extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      tasks: [],\n      textInput: '',\n      tasksAdded: 0,\n    }\n  }\n\n  updateInput = (e) => {\n    this.setState({textInput: e.target.value});\n  }\n\n  addTask = () => {\n    if (this.state.textInput !== '') {\n      this.setState({tasksAdded: this.state.tasksAdded + 1})\n      this.setState({tasks: this.state.tasks.concat([{id: this.state.tasksAdded, text: this.state.textInput}])});\n      this.setState({textInput: ''});\n      console.log(this.state.tasks);\n    }\n  }\n\n  enterPressed = (e) => {\n    if (e.keyCode === 13 && this.state.textInput !== '') {\n      this.setState({tasksAdded: this.state.tasksAdded + 1})\n      this.setState({tasks: this.state.tasks.concat([{id: this.state.tasksAdded, text: this.state.textInput}])});\n      this.setState({textInput: ''});\n      console.log(this.state.tasks);\n    }\n  }\n\n  deleteTask = (id) => {\n    this.setState({tasks: this.state.tasks.filter(task => task.id !== id)});\n  }\n\n  clearTasks = () => {\n    this.setState({tasks: []});\n  }\n\n  render() {\n    return (\n      <div>\n        <div>\n          <input className='br3' type='text' placeholder='Enter task to add' value={this.state.textInput} onKeyDown={this.enterPressed} onChange={this.updateInput} />\n          <button className='f6 link dim ba bw1 ph3 pv2 mb2 dib dark-blue mar ml3 br3' onClick={this.addTask}>Enter</button>\n          <button className='f6 link dim ba bw1 ph3 pv2 mb2 dib red mar ml5 br3' onClick={this.clearTasks}>Clear Tasks</button>\n        </div>\n        <div className='paper center bg-white'>\n          <ul className='mt6'>\n            {\n              this.state.tasks.map(task => <div className=\"entry flex items-start\" key={task.id}><button onClick={() => this.deleteTask(task.id)} className=\"di deleteButton\">â˜“</button><li className='di v-mid'>{task.text}</li></div>)\n            }\n          </ul>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Page;","import React, {Component} from 'react';\nimport './App.css';\nimport 'tachyons';\nimport Navigation from './components/Navigation';\nimport Page from './components/Page';\n\nclass App extends Component {\n  constructor () {\n    super();\n    this.state = {\n      route: 'signin'\n    }\n  }\n\n  render () {\n    return (\n      <div className=\"App\">\n        <Navigation />\n        <Page />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}